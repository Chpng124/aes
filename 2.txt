 WriteanapplicationprogramtointerfaceLEDstoGPIOsofLPC1857CortexM3evaluation
 boardanddemonstrate interrupt-basedIOoperation. Theboardissupportedwitharowof
 8LEDs.WritecodetoblinkLEDsinasequencestartingfromthefirstatarateof500msec.
 ConfiguretheSysTickTimer togenerateaninterruptatarateof100msec.WriteanISR
 suitablytogenerateanintervalof500msectotriggertogglingLEDs. DevelopsuitableLED
 driverfunctions.



 #include <LPC18xx.h>
 #include "LED.h"
 #define NUM_LEDS 8
 const uint32_t led_mask[] = { 1UL << 14,
 1UL << 13,
 1UL << 12,
 1UL << 28,
 1UL << 27,
 1UL << 26,
 1UL << 25,
 1UL << 24 };
 #define CCU_CLK_CFG_RUN (1 << 0)
 #define CCU_CLK_CFG_AUTO (1 << 1)
 #define CCU_CLK_STAT_RUN (1 << 0)
 void LED_Init(void){
 LPC_CCU1->CLK_M3_GPIO_CFG=(CCU_CLK_CFG_RUN|CCU_CLK_CFG_AUTO);
 while((LPC_CCU1->CLK_M3_GPIO_STAT & CCU_CLK_STAT_RUN)==0);
 LPC_SCU->SFSP9_0=0;
 LPC_SCU->SFSP9_1=0;
 LPC_SCU->SFSP9_2=0;
 LPC_GPIO_PORT->DIR[4]|=(led_mask[0]|led_mask[1]|led_mask[2]);
 LPC_SCU->SFSPD_10=4;
 LPC_SCU->SFSPD_11=4;
 LPC_SCU->SFSPD_12=4;
 LPC_SCU->SFSPD_13=4;
 LPC_SCU->SFSPD_14=4;
 LPC_GPIO_PORT->DIR[6]|=(led_mask[3]|led_mask[4]|led_mask[5]|led_mask[6]|led_mask[7]);
 }
 void LED_On(uint32_t num){
 if(num<3)
 LPC_GPIO_PORT->SET[4]=led_mask[num];
 else
 LPC_GPIO_PORT->SET[6]=led_mask[num];
 }
 void LED_Off(uint32_t num){
 if(num<3)
 LPC_GPIO_PORT->CLR[4]=led_mask[num];
 else
 LPC_GPIO_PORT->CLR[6]=led_mask[num];
 }
 

  // Listing3:LEDLPC18xx.c
 
#include <LPC18xx.h>
 #include "LED.h"
 uint32_t LEDOn, LEDOff;
 void SysTick_Handler(void)
 {
 static uint32_t ticks;
 switch (ticks++){
 case 0:LEDOn = 1; break;
 case 5:LEDOff = 1; break;
 case 9:ticks = 0; break;
 default: if(ticks > 10)
 ticks = 10;
 }
 }
 int main(void)
 {
 int32_t max_num = 7;
 int32_t num = 0;
 int32_t dir = 1;
 SysTick_Config(SystemCoreClock/10);
 LED_Init();
 while(1){
 if(LEDOn){
 LEDOn=0;
 LED_On(num);
 }
 if(LEDOff){
 LEDOff = 0;
 LED_Off(num);
 num+=dir;
 if(dir==1 && num == max_num)
 dir =-1;
 else if(num == 0)
 dir =1;
 }
 }
 }


// Listing4:Blinky.c