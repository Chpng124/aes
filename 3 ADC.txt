3 ADC
 WriteadriverforADC0inLPC1857MCU.DisplaythedigitalvalueonGLCDanddemon
stratetheanalogsensor interface.Writedriver functions forADCinitialization,ADCstart
 ofconversion,andreadingdigitalvalueoutput.DevelopthemainfunctionusingAPIsofthe
 ADCdrivertotestthefunctionality.Accessthetestpointstocheckthecorrectnessofdigital
 encoding.



 #include <LPC18xx.h>
 #include "ADC.h"
 #define ADC_BITS 10
 #define ADC_TOUT 2000000
// static volatile uint16_t AD_last;
//static volatile uint8_t AD_done;
 #define CCU_CLK_CFG_RUN (1 << 0)
 #define CCU_CLK_CFG_AUTO (1 << 1)
 #define CCU_CLK_STAT_RUN (1 << 0)

 void ADC_Init(void);
 void ADC_StartCnv(void);
 int32_t ADC_GetVal(void);
 // void ADC0_IRQHandler(void);
 void delay_ms(uint32_t ms);

 void ADC_Init(void) {
 LPC_CCU1->CLK_APB3_ADC0_CFG = CCU_CLK_CFG_AUTO | CCU_CLK_CFG_RUN;
 while (!(LPC_CCU1->CLK_APB3_ADC0_STAT & CCU_CLK_STAT_RUN));

 LPC_ADC0->INTEN |= (1UL << 1);
  // NVIC_EnableIRQ(ADC0_IRQn);
 }

 void ADC_StartCnv(void) {
  // AD_done = 0;
 LPC_ADC0->CR |= (1UL << 24); /* Start conversion */
 }

 int32_t ADC_GetVal(void) {
 int32_t i; 
int16_t digital_val;
 for (i = ADC_TOUT; i; i--);
digital_val = = (LPC_ADC0->DR[1] >> 6) & 0x3FF;
 }

/*
 int32_t ADC_GetVal(void) {
 int32_t i;
 for (i = ADC_TOUT; i; i--) {
 if (AD_done) {
 return (AD_last);
 } 
 }
 return-1;
 }


 void ADC0_IRQHandler(void) {
 LPC_ADC0->GDR; /* Clear IRQ request flag */
 AD_last = (LPC_ADC0->DR[1] >> 6) & 0x3FF; /* Read value */
 AD_done = 1;
 }

*/

 void delay_ms(uint32_t ms) {
 volatile uint32_t count;
 while (ms--) {
 for (count = 0; count < 1000; count++);
 }
 }
                   // Listing5:ADCLPC18xx.c
 



#include <LPC18xx.h>
 #include <stdio.h>
 #include "ADC.h"
 #include "GLCD.h"


 int main(void) {
 char acBuf[10];
 int adcVal;
 ADC_Init();
 GLCD_Init();
 GLCD_Clear(White);
 GLCD_SetBackColor(White);
 GLCD_SetTextColor(Red);
 GLCD_DisplayString(0, 0, 1, " RVECE ");
 GLCD_DisplayString(1, 0, 1, " ADC ");
 GLCD_DisplayString(3, 0, 1, " AD value: ");

 while (1) {
 ADC_StartCnv();
 adcVal = ADC_GetVal(void);
 sprintf(acBuf, "%d", adcVal);
 GLCD_SetTextColor(Red);
 GLCD_DisplayString(4, 0, 1, acBuf);
 delay_ms(300);
 
 }
 }
                     // Listing 6: Demo.c
