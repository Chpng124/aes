13. LM75 I2C
 
Write driver to support LM75a digital temperature sensor through I2C. Assume APIs 
for I2C interface as listed below are available. Test the functionality by displaying 
temperature values on GLCD. Use a push button event to trigger the LPC 1857 to 
read temperature value from LM75a.  


// code
 
#include<I2C.h>
uint32_t I2C_WrData(uint8_t addr, uint8_t secByte, uint8_t *buf, uint32_t cnt)
{
    I2C_Start();
    I2C_Addr(addr, 0);
    I2C_Write(secByte);
    I2C_Write(buf[0]);
    I2C_Stop();
}
Uint32_t I2C_RdData(uint8_t addr, uint8_t secByte, uint8_t *buf, uint32_t cnt)
{
    I2C_Start();
    I2C_Addr(addr, 0);
    I2C_Write(secByte);
    I2C_Start();
    I2C_Addr(addr, 1);
    I2C_Read(1, &buf[0]);
    I2C_Read(0, &buf[1]);
    I2C_Stop();
}

#include <TH_LM75.h>
#define TH_I2C_ADDR   0x48
TH_DATA therm;
#define REG_TEMP     0x00
#define REG_CONF     0x01
#define REG_THYS     0x02
#define REG_TOS      0x03
Uint32_t TH_Init(void) {
    Uint8_t val[2];
    val[0] = 0;
    I2C_WrData(TH_I2C_ADDR, REG_CONF, val, 1);
}
uint16_t TH_GetTemp(TH_DATA *thData) {
    uint8_t val[2];
    I2C_RdData(TH_I2C_ADDR, REG_TEMP, val, 1);
    thData->Temp = (val[0] << 8) | ((val[1] & 0x80);
}
int main(void) {
    float temp; 
char actmsg[30];
    I2C_Init();
    TH_Init();
    KEY_Init();
    GLCD_Init();
    GLCD_Clear(White);
    Void KEY_Init()
{
    LPC_SCU->SFSP4_0 = ((1UL<<6) | 0);
    LPC_SCU->SFSP4_3 = (1UL<<6 | 0);
    LPC_SCU->SFSP4_4 = (1UL<<6 | 0);
    LPC_GPIO_PORT->DIR[2] &= 0xFFFFFFE6;
}
   while(1) {
        if((LPC_GPIO_PORT->PIN[2] & 8) == 0) {
            TH_GetTemp(&therm);
            temp = therm.Temp;
            sprintf(actmsg, "Temp: %.2f", temp/256);
            GLCD_DisplayString(3, 0, 1, actmsg);
        }
    }
}