4 LM75aTemperatureSensor
 Writedriver to supportLM75adigital temperature sensor throughI2C.AssumeAPIs for
 I2Cinterface as listedbeloware available. Test the functionalitybydisplaying tempera
turevaluesonGLCD.uint32t I2CInit (void); uint32t I2CStart (void); uint32t I2CStop
 (void);uint32tI2CAddr(uint8tadr,uint8tdir);uint32tI2CWrite(uint8tbyte);uint32t
 I2CRead(uint32tack,uint8t*byte);




       // code
 uint32_t I2C_WrData (uint8_t addr, uint8_t secByte, uint8_t *buf, uint32_t cnt) {
 int i;
 I2C_Start();
 I2C_Addr(addr,0);
 I2C_Write(secByte);
 for(i=0;i<cnt;i++){
 I2C_Write(buf[i]);
 }
 I2C_Stop();
 }
 uint32_t I2C_RdData (uint8_t addr, uint8_t secByte, uint8_t *buf, uint32_t cnt) {
 I2C_Start();
 I2C_Addr(addr,0);
 I2C_Write(secByte);
 I2C_Start();
 I2C_Addr(addr,1);
 I2C_Read(1,&buf[0]);
 I2C_Read(0,&buf[1]);
 I2C_Stop();
 }
                           //  Listing7: I2CLPC18xx.c
 #include <stdint.h>
 #include "TH_LM75.h"
 #include "I2C.h"
 #define TH_I2C_ADDR 0x48
 #define REG_TEMP 0x00
 #define REG_CONF 0x01
 #define REG_THYS 0x02
 #define REG_TOS 0x03
 uint32_t TH_Init(void){
 uint8_t val[2];
 val[0]=0;
 I2C_WrData(0x48, 0x01, val, 1);
 val[1]=0;
 val[0]=75;
 I2C_WrData(0x48, 0x02, val, 2);
 val[1]=0;
 val[0]=80;
 I2C_WrData(0x48, 0x03, val, 2);
 }
 uint16_t TH_GetTemp(TH_DATA *ThDat){
 uint8_t val[2];
 I2C_RdData(0x48, 0x00, val, 2);
 ThDat->Temp = (val[0]<<8) | (val[1]&0x80);
 }



                                        //Listing8:THLM75.c
 
#include <LPC18xx.h>
 #include <stdio.h>
 #include "I2C.h"
 #include "GLCD.h"
 #include "TH_LM75.h"
 char acbuf[20];
 TH_DATA therm;
 int main(void){
 float temp;
 I2C_Init();
 TH_Init();
 GLCD_Init();
 GLCD_Clear(White);
 GLCD_SetBackColor(Black);
 GLCD_SetTextColor(White);
 GLCD_DisplayString(1,0,1,"Temperature value:");
 while(1){
 TH_GetTemp(&therm);
 temp=therm.Temp;
 sprintf(acbuf, "%.2f", temp/256);
 GLCD_DisplayString(3,0,1,acbuf);
 }
 }
                // Listing 9: Demo.c